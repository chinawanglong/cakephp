<?php
/**
 * Created by PhpStorm.
 * User: elliot
 * Date: 14/09/2018
 * Time: 10:04
 */

namespace App\Controller\Component;


use Cake\Controller\Component;
use Cake\Core\Configure;

class ProtoWechatComponent  extends Component
{
    private $controller;

    private $wxConfig;

    public function initialize(array $config)
    {
        parent::initialize($config); // TODO: Change the autogenerated stub
        $this->controller = $controller = $this->_registry->getController();

        $this->wxConfig = Configure::read('wx_config');
    }

    /**
     * @return string
     */
    public function getAppId (){
        $appArr = $this->wxConfig;
        return trim($appArr['app_id']);
    }

    /**
     * @return string
     */
    public function getSecret(){
        $appArr = $this->wxConfig;
        return trim($appArr['secret']);
    }

    /**
     * @return string
     */
    public function getToken(){
        $appArr = $this->wxConfig;
        return trim($appArr['token']);
    }

    /**
     * @param $url
     * @param null $post_json
     * @return mixed|string
     */
    public function httpRequest($url, $post_json = null){
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        if ($post_json){
            curl_setopt($ch, CURLOPT_POSTFIELDS, $post_json);
        }
        $res = curl_exec($ch);
        if (curl_errno($ch)){
            return curl_error($ch);
        }
        curl_close($ch);

        return $res;
    }

    public function valid(){
        $echoStr = $_GET['echostr'];
        if ($this->checkSignature()){
            echo $echoStr;
            exit();
        }
    }

    public function checkSignature(){
        $signature = $_GET['signature'];
        $timestamp = $_GET['timestamp'];
        $nonce = $_GET['nonce'];

        $tmpArr = array($this->getToken(), $timestamp, $nonce);
        sort($tmpArr, SORT_STRING);
        $tmpStr = implode($tmpArr);
        $tmpStr = sha1($tmpStr);

        if ($signature == $tmpStr){
            return true;
        } else {
            return false;
        }
    }
    

}
